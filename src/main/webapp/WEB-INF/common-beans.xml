<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:redis="http://www.springframework.org/schema/redis" xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/rabbit
            
            http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
            http://www.springframework.org/schema/tx
        	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        	http://www.springframework.org/schema/aop
      		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/util 
            http://www.springframework.org/schema/util/spring-util-4.1.xsd
            http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
            http://www.springframework.org/schema/redis
        	http://www.springframework.org/schema/redis/spring-redis-1.0.xsd http://www.springframework.org/schema/task 
            http://www.springframework.org/schema/task/spring-task.xsd">
	<!-- 默认扫描的包路径 -->

	<bean id="ResourceConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/config.properties</value>
			</list>
		</property>
	</bean>

	<context:property-placeholder location="classpath:config.properties" />

	<context:component-scan
		base-package="com.caishuo.ga,com.caishuo.common,com.caishuo.market" />
	<task:annotation-driven />

	<bean id="scheduledExecutor"
		class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean">
		<property name="continueScheduledExecutionAfterException"
			value="true"></property>
	</bean>


	<bean id="redisSentinelConfiguration"
		class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="${redis.masterName}" />
			</bean>
		</property>
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel1.host}" />
					<constructor-arg name="port" value="${redis.sentinel1.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel2.host}" />
					<constructor-arg name="port" value="${redis.sentinel2.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel3.host}" />
					<constructor-arg name="port" value="${redis.sentinel3.port}" />
				</bean>
			</set>
		</property>
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisSentinelConfiguration" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="password" value="${redis.password}" />
		<property name="database" value="${redis.database}" />
	</bean>


	<bean id="writeRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>


	<bean id="salveJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="salveJedisConnectionFactory"
		class="com.caishuo.common.util.redis.JedisSalveConnectionFactory">
		<constructor-arg ref="redisSentinelConfiguration" />
		<property name="poolConfig" ref="salveJedisPoolConfig" />
		<property name="password" value="${redis.password}" />
		<property name="database" value="${redis.database}" />
	</bean>


	<bean id="readRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="salveJedisConnectionFactory" />
	</bean>

	<redis:listener-container connection-factory="jedisConnectionFactory">
		
	</redis:listener-container>



	<!-- ========================================配置数据源========================================= -->
	<!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.className}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="10" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
		<property name="validationQuery" value="${jdbc.validation.query}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations"
			value="classpath:com/lee/vrg/common/model/ibatis/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 把扫描到的Mapper接口变成Mapper对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--指定要扫描包： 多个包用逗号隔开 -->
		<property name="basePackage" value="com.lee.vrg.common.model.dao" />
		<!--指定sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->


	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>


</beans>



