<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lee.vrg.common.model.dao.UserLocationMapper" >
  <resultMap id="BaseResultMap" type="com.lee.vrg.common.model.UserLocation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="location_type" property="locationType" jdbcType="BIGINT" />
    <result column="location_name" property="locationName" jdbcType="VARCHAR" />
    <result column="location_x" property="locationX" jdbcType="VARCHAR" />
    <result column="location_y" property="locationY" jdbcType="VARCHAR" />
    <result column="location_status" property="locationStatus" jdbcType="INTEGER" />
    <result column="location_id" property="locationId" jdbcType="BIGINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, location_type, location_name, location_x, location_y, location_status, 
    location_id, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lee.vrg.common.model.UserLocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_location
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_location
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lee.vrg.common.model.UserLocationExample" >
    delete from user_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert useGeneratedKeys="true" keyProperty="id" id="insert" parameterType="com.lee.vrg.common.model.UserLocation" >
    insert into user_location (id, user_id, location_type, 
      location_name, location_x, location_y, 
      location_status, location_id, gmt_create, 
      gmt_modify)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{locationType,jdbcType=BIGINT}, 
      #{locationName,jdbcType=VARCHAR}, #{locationX,jdbcType=VARCHAR}, #{locationY,jdbcType=VARCHAR}, 
      #{locationStatus,jdbcType=INTEGER}, #{locationId,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModify,jdbcType=TIMESTAMP})
  </insert>
  <insert useGeneratedKeys="true" keyProperty="id" id="insertSelective" parameterType="com.lee.vrg.common.model.UserLocation" >
    insert into user_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="locationType != null" >
        location_type,
      </if>
      <if test="locationName != null" >
        location_name,
      </if>
      <if test="locationX != null" >
        location_x,
      </if>
      <if test="locationY != null" >
        location_y,
      </if>
      <if test="locationStatus != null" >
        location_status,
      </if>
      <if test="locationId != null" >
        location_id,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="locationType != null" >
        #{locationType,jdbcType=BIGINT},
      </if>
      <if test="locationName != null" >
        #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null" >
        #{locationX,jdbcType=VARCHAR},
      </if>
      <if test="locationY != null" >
        #{locationY,jdbcType=VARCHAR},
      </if>
      <if test="locationStatus != null" >
        #{locationStatus,jdbcType=INTEGER},
      </if>
      <if test="locationId != null" >
        #{locationId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lee.vrg.common.model.UserLocationExample" resultType="java.lang.Integer" >
    select count(*) from user_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_location
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.locationType != null" >
        location_type = #{record.locationType,jdbcType=BIGINT},
      </if>
      <if test="record.locationName != null" >
        location_name = #{record.locationName,jdbcType=VARCHAR},
      </if>
      <if test="record.locationX != null" >
        location_x = #{record.locationX,jdbcType=VARCHAR},
      </if>
      <if test="record.locationY != null" >
        location_y = #{record.locationY,jdbcType=VARCHAR},
      </if>
      <if test="record.locationStatus != null" >
        location_status = #{record.locationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null" >
        location_id = #{record.locationId,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_location
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      location_type = #{record.locationType,jdbcType=BIGINT},
      location_name = #{record.locationName,jdbcType=VARCHAR},
      location_x = #{record.locationX,jdbcType=VARCHAR},
      location_y = #{record.locationY,jdbcType=VARCHAR},
      location_status = #{record.locationStatus,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lee.vrg.common.model.UserLocation" >
    update user_location
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="locationType != null" >
        location_type = #{locationType,jdbcType=BIGINT},
      </if>
      <if test="locationName != null" >
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null" >
        location_x = #{locationX,jdbcType=VARCHAR},
      </if>
      <if test="locationY != null" >
        location_y = #{locationY,jdbcType=VARCHAR},
      </if>
      <if test="locationStatus != null" >
        location_status = #{locationStatus,jdbcType=INTEGER},
      </if>
      <if test="locationId != null" >
        location_id = #{locationId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lee.vrg.common.model.UserLocation" >
    update user_location
    set user_id = #{userId,jdbcType=BIGINT},
      location_type = #{locationType,jdbcType=BIGINT},
      location_name = #{locationName,jdbcType=VARCHAR},
      location_x = #{locationX,jdbcType=VARCHAR},
      location_y = #{locationY,jdbcType=VARCHAR},
      location_status = #{locationStatus,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>