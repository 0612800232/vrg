<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lee.vrg.common.model.dao.LocationTypeMapper">
	<resultMap id="BaseResultMap" type="com.lee.vrg.common.model.LocationType">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="location_type_desc" property="locationTypeDesc"
			jdbcType="VARCHAR" />
		<result column="creater_id" property="createrId" jdbcType="INTEGER" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, location_type_desc, creater_id, gmt_create, gmt_modify
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.lee.vrg.common.model.LocationTypeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from location_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from location_type
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from location_type
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lee.vrg.common.model.LocationTypeExample">
		delete from location_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lee.vrg.common.model.LocationType">
		insert into location_type (id, name, location_type_desc,
		creater_id, gmt_create, gmt_modify
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{locationTypeDesc,jdbcType=VARCHAR},
		#{createrId,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.lee.vrg.common.model.LocationType">
		insert into location_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="locationTypeDesc != null">
				location_type_desc,
			</if>
			<if test="createrId != null">
				creater_id,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtModify != null">
				gmt_modify,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="locationTypeDesc != null">
				#{locationTypeDesc,jdbcType=VARCHAR},
			</if>
			<if test="createrId != null">
				#{createrId,jdbcType=INTEGER},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModify != null">
				#{gmtModify,jdbcType=TIMESTAMP},
			</if>
		</trim>
		<selectKey resultType="java.lang.Integer" keyProperty="id">
			SELECT @@IDENTITY AS ID
		</selectKey>
	</insert>
	<select id="countByExample" parameterType="com.lee.vrg.common.model.LocationTypeExample"
		resultType="java.lang.Integer">
		select count(*) from location_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update location_type
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.locationTypeDesc != null">
				location_type_desc = #{record.locationTypeDesc,jdbcType=VARCHAR},
			</if>
			<if test="record.createrId != null">
				creater_id = #{record.createrId,jdbcType=INTEGER},
			</if>
			<if test="record.gmtCreate != null">
				gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.gmtModify != null">
				gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update location_type
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		location_type_desc = #{record.locationTypeDesc,jdbcType=VARCHAR},
		creater_id = #{record.createrId,jdbcType=INTEGER},
		gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
		gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lee.vrg.common.model.LocationType">
		update location_type
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="locationTypeDesc != null">
				location_type_desc = #{locationTypeDesc,jdbcType=VARCHAR},
			</if>
			<if test="createrId != null">
				creater_id = #{createrId,jdbcType=INTEGER},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModify != null">
				gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lee.vrg.common.model.LocationType">
		update location_type
		set name = #{name,jdbcType=VARCHAR},
		location_type_desc = #{locationTypeDesc,jdbcType=VARCHAR},
		creater_id = #{createrId,jdbcType=INTEGER},
		gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>